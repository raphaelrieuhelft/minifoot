f1(x) [x|->] {} [x|->NULL]

f2(x,y) [x|-> * y|->] {x=y;} [false]

f3(x)[emp] {
  local y;
  y = new();
  while(x!=y) [y|->] {
      dispose(y);
      y =new();
    }
  x = y->tl;
} [x|->]

f4()[emp] {
  local x;
  f3(x)||f3(x);
} [false]

f5(x) [_t |->x] {} [_t|->x]

f6(x,y) [x |->y] {
local t;
x = new();
x -> tl = t;
} [_z != x * x |-> t * _z|->y ]  /*imprecise formula*/






/* tests on frame inference */


test0() [emp] { } [_x==_y*_x!=_y*emp]

test1a(x) [emp] {} [x|->]
test1b(x) [x|->] {} [emp]
test1c(x) [x|->] { } [x|->*x|->]

test2a(x,y) [emp] { } [x==y]
test2b(x,y) [emp] { } [x!=y]

test3a(x,y) [x|->*y|->] { } [x|->_x*y|->_x]
test3b(x,y) [x|->*y|->] { } [_x==_y*x|->_x*y|->_y]
test3c(x,y) [x|->*y|->] { } [_x!=_y*x|->_x*y|->_y]

test4(x,y) [x|->*y|->] { } [x|->_y*_y|->]

test5(x) [emp] { } [_x==x]
/* We are not sure about this one and put it here because our program rejects it, because we refuse to find a frame for L |- ??*R when R contains non existential variables which are not present in L. Anyway the behavior on this one does not seem very important, especially as test1c(x) [x==x] { } [_x==x] in positives.sf passes. */



/* tests on imprecise formulas */


imprecise0a() [_x|->] { } [_x|->]
imprecise0b()[_x|->_x] { } [_x|->_x]
imprecise0c()[_x|->_y*_y|->_x] { } [_x|->_y*_y|->_x]
imprecise0d(x) [_x==_y*_x|->] { } [_x==_y*_x|->]
/* all existential variables appearing as target of an arrow or in an equality is not enough */

imprecise1a(x) [x|->] { } [_x|->]
imprecise1b(x) [x==_x*_x|->] { } [_x|->]

imprecise2a()[_x|->] { } [false]
imprecise2b()[false]{} [_x|->]
