f1(x) [x|->] {
  x->tl = NULL;
} [x|->NULL]

f2(x,y)[x |-> * y |-> ] {
  while(x!=y) [y|->] {
      dispose(y);
      y=new();
    }
} [false]

f3(x)[x == _x] {
  local y;
  y = new();
  while(x!=y) [y|->] {
      dispose(y);
      y =new();
    }
} [x== _x * x== y * y|->]


/*
f4()[emp] {
  local x,y,t;
  f3(x)||f3(y);
  t = x->tl;
  y->tl = t;
} [if x==y then false else x|-> _u * y|-> _u]
*/
f5(x,y)[(if x==y then x|->y else emp) * (if x==y then emp else y|->x)] {} [y|->x]
/*
f6(x,y) [x |->y] {
local t;
x = new();
x -> tl = t;
} [_z != x * x |-> t * _z|->y ]
*/
